-> Cucumber Introduction
 -> Feature File
 -> Breakout
 -> Step Defination & Runner Class
 -> Breakout
 
 
 
Cucumber: 


Dependencies:
<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
	<dependency>
		<groupId>io.cucumber</groupId>
		<artifactId>cucumber-java</artifactId>
		<version>7.10.0</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-testng -->
	<dependency>
		<groupId>io.cucumber</groupId>
		<artifactId>cucumber-testng</artifactId>
		<version>7.10.0</version>
	</dependency>
	
	
	
Steps to Create the layers of Cucumber
Create 3 packages under src/test/java 
*features 
*steps 
*runner















 ● Steps to Create File :-
 Creating features package, 
 Mouseover on it & Right Click --> New --> Other... --> Select File under General Folder --> File Click Next
● Set File name as Login.feature & Click Finish
● U can see a new file Created under features package like slice of Cucumber IMG 
Then it's Fine👍🏻🙂





Gherkin keyword:
Feature:  Login functionality  of Leaftaps Application
          (Describes the functionality of an appliction)

       

Scenario:  Login with Valid credentials
           (Represents a testcase)
  Given    Launch the browser     -> to represent the precondition of a scenario
  And      Load the url
  And      Enter the username as Demosalesmanager
  And      Enter the password as crmsfa
  When     Click on the Login button -> to represent the test condition  
  Then     Homepage should be displayed -> To represent the positive expected result  

Scenario:  Login with InValid credentials
           (Represents a testcase)
  Given    Launch the browser     -> to represent the precondition of a scenario
  And      Load the url
  And      Enter the username   as Demo
  And      Enter the password   as crms
  When     Click on the Login button -> to represent the test condition  
  But      ErrorMessage should be displayed -> To represent the negative expected result    

Create feature file inside features package

Right click on features package -> Click Other -> Double Click General -> Double click File -> Give Filename with .feature as extension -> Click Finish
Create StepDefinition class inside steps package

Inside StepDefinition create methods for each step defined in the feature file
And put the real codes inside each methods
To integrate StepDefinition and the feature file on the top of each method use @Given/And/When/Then("")
Create CucumberRunner class inside runner package

The runner class should extend AbstractTestNGCucumberTests
Add @CucumberOptions on the top of the Runner Class
Within @CucumberOptions() use some of the attributes features -> to mention the path of the feature file glue -> to mention the package name of StepDefintion monochrome -> to remove the unreadable/junk characters from the console publish -> to get the cucumber report in the console @CucumberOptions(features = "src/test/java/features/Login.feature", glue = "steps" , monochrome = true, publish = true) public class CucumberRunner extends AbstractTestNGCucumberTests{
} 




Parameterization:
Static -

feature file:
We need Pass the value inside the single quotes = 'DemoSalesManager'
'crmsfa' in the feature file

Steps package:
@Given("Enter the Username as {string}")


@Given("Enter the Username as {string}")
Enter the Username(String uname){
Driver.findElement(by.name("username").sendKeys(uname);
}



How to pass multiple data using Scenario Outline and Examples :
1. To pass multiple data for a single scenario the Gherkins keyword used is Scenario Outline
2. In Scenario Outline identify the dynamic data and replace that with <>
    ex: <companyName> <username>
	<password>
	<firstname>
3. Under Examples keyword create pipeline symbol and mention the column name
   ex: |companyName|firstname|
   Note: The name should exactly match
    -Pass the values in the second row of Examples
    ex: |'TestLeaf'|'Dilip'| (1st set of data)
        |'Qeagle'|'Dilip'|   (2nd set of data)
                                                     
4.Go to the Step Definition and replace <companyName> with {string}-only string
5.Pass Input arguments to the method and replace the hardcoded value withe the argument   


ChromeDriver: chrome on windows (e67fe29b3c38bb681e6b2fa99e65d116)

ChromeDriver: chrome on windows (e67fe29b3c38bb681e6b2fa99e65d116)

Create PSM 
add driver vlaue 
declare driver as static variable .

